name: "Security"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 10 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write
  packages: read
  actions: read

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache MegaLinter
        uses: actions/cache@v3
        with:
          path: ~/.cache/megalinter
          key: ${{ runner.os }}-megalinter-${{ hashFiles('**/*') }}
          restore-keys: |
            ${{ runner.os }}-megalinter-

      - name: Run MegaLinter
        uses: oxsecurity/megalinter@v8.1.0

  trivy-scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache Trivy DB
        id: trivy-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db

      - name: Run Trivy Scanner
        uses: aquasecurity/trivy-action@0.28.0

      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  gitleaks-scan:
    name: Gitleaks Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks Scanner
        uses: gitleaks/gitleaks-action@v2

  osv-scheduled-scan:
    name: OSV Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run OSV Scanner
        run: |
          curl -sSL https://osv-vulnerabilities.com/scan.sh | bash -s -- -r --skip-git ./

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache CodeQL Databases
        id: codeql-cache
        uses: actions/cache@v3
        with:
          path: ~/codeql-database
          key: ${{ runner.os }}-codeql-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-codeql-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          queries: security-extended,security-and-quality

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
